"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _CreateHistoryCommand = _interopRequireDefault(require("../model/CreateHistoryCommand"));

var _CreateRevokeCommand = _interopRequireDefault(require("../model/CreateRevokeCommand"));

var _HistoryDetailViewModel = _interopRequireDefault(require("../model/HistoryDetailViewModel"));

var _HistoryViewModel = _interopRequireDefault(require("../model/HistoryViewModel"));

var _RevokeViewModel = _interopRequireDefault(require("../model/RevokeViewModel"));

/**
 * Siigo.Alliances API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
* History service.
* @module api/HistoryApi
* @version V1
*/
var HistoryApi = /*#__PURE__*/function () {
  /**
  * Constructs a new HistoryApi. 
  * @alias module:api/HistoryApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function HistoryApi(apiClient) {
    (0, _classCallCheck2["default"])(this, HistoryApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }
  /**
   * Get last History by AllianceId
   * @param {String} allianceId 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/HistoryDetailViewModel} and HTTP response
   */


  (0, _createClass2["default"])(HistoryApi, [{
    key: "apiHistoryAllianceIdGetWithHttpInfo",
    value: function apiHistoryAllianceIdGetWithHttpInfo(allianceId) {
      var postBody = null; // verify the required parameter 'allianceId' is set

      if (allianceId === undefined || allianceId === null) {
        throw new Error("Missing the required parameter 'allianceId' when calling apiHistoryAllianceIdGet");
      }

      var pathParams = {
        'allianceId': allianceId
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['Bearer'];
      var contentTypes = [];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = _HistoryDetailViewModel["default"];
      return this.apiClient.callApi('/api/history/{allianceId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }
    /**
     * Get last History by AllianceId
     * @param {String} allianceId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/HistoryDetailViewModel}
     */

  }, {
    key: "apiHistoryAllianceIdGet",
    value: function apiHistoryAllianceIdGet(allianceId) {
      return this.apiHistoryAllianceIdGetWithHttpInfo(allianceId).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
    /**
     * Register a History record for the AllianceID
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateHistoryCommand} opts.createHistoryCommand 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/HistoryViewModel} and HTTP response
     */

  }, {
    key: "apiHistoryPostWithHttpInfo",
    value: function apiHistoryPostWithHttpInfo(opts) {
      opts = opts || {};
      var postBody = opts['createHistoryCommand'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['Bearer'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = _HistoryViewModel["default"];
      return this.apiClient.callApi('/api/history', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }
    /**
     * Register a History record for the AllianceID
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateHistoryCommand} opts.createHistoryCommand 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/HistoryViewModel}
     */

  }, {
    key: "apiHistoryPost",
    value: function apiHistoryPost(opts) {
      return this.apiHistoryPostWithHttpInfo(opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
    /**
     * Register a Revoke record for the AllianceID
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateRevokeCommand} opts.createRevokeCommand 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RevokeViewModel} and HTTP response
     */

  }, {
    key: "apiRevokePostWithHttpInfo",
    value: function apiRevokePostWithHttpInfo(opts) {
      opts = opts || {};
      var postBody = opts['createRevokeCommand'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['Bearer'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = _RevokeViewModel["default"];
      return this.apiClient.callApi('/api/revoke', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }
    /**
     * Register a Revoke record for the AllianceID
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateRevokeCommand} opts.createRevokeCommand 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RevokeViewModel}
     */

  }, {
    key: "apiRevokePost",
    value: function apiRevokePost(opts) {
      return this.apiRevokePostWithHttpInfo(opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
  return HistoryApi;
}();

exports["default"] = HistoryApi;