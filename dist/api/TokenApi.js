"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _AllianceModel = _interopRequireDefault(require("../model/AllianceModel"));

var _TokenViewModel = _interopRequireDefault(require("../model/TokenViewModel"));

/**
 * Siigo.Alliances API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
* Token service.
* @module api/TokenApi
* @version V1
*/
var TokenApi = /*#__PURE__*/function () {
  /**
  * Constructs a new TokenApi. 
  * @alias module:api/TokenApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function TokenApi(apiClient) {
    (0, _classCallCheck2["default"])(this, TokenApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }
  /**
   * Returns a token valid for alliances
   * @param {Object} opts Optional parameters
   * @param {module:model/AllianceModel} opts.allianceModel Alliance code
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TokenViewModel} and HTTP response
   */


  (0, _createClass2["default"])(TokenApi, [{
    key: "apiAuthPostWithHttpInfo",
    value: function apiAuthPostWithHttpInfo(opts) {
      opts = opts || {};
      var postBody = opts['allianceModel'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['Bearer'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['text/plain', 'application/json', 'text/json'];
      var returnType = _TokenViewModel["default"];
      return this.apiClient.callApi('/api/auth', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }
    /**
     * Returns a token valid for alliances
     * @param {Object} opts Optional parameters
     * @param {module:model/AllianceModel} opts.allianceModel Alliance code
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TokenViewModel}
     */

  }, {
    key: "apiAuthPost",
    value: function apiAuthPost(opts) {
      return this.apiAuthPostWithHttpInfo(opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
  return TokenApi;
}();

exports["default"] = TokenApi;