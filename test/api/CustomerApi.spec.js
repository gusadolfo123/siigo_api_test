/**
 * Siigo API
 * Siigo Api v1
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    // AMD.
    define([
      "expect.js",
      process.cwd() + "/src/index",
      process.cwd() + "/test/app",
    ], factory);
  } else if (typeof module === "object" && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(
      require("expect.js"),
      require(process.cwd() + "/src/index"),
      require(process.cwd() + "/test/app.js")
    );
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SiigoApi, root.app);
  }
})(this, function (expect, SiigoApi, app) {
  "use strict";

  var instance;
  var result = {};
  var id = "";
  var identification = Date.now().toString();
  var data = {
    type: "Other",
    person_type: "Company",
    id_type: "21",
    identification: identification,
    check_digit: "0",
    name: ["Prueba slasso"],
    commercial_name: "",
    branch_office: 0,
    active: true,
    vat_responsible: false,
    fiscal_responsibilities: "",
    address: {
      address: "cra 123 n30",
      city: {
        country_code: "Co",
        state_code: "19",
        city_code: "19001",
      },
      postal_code: "",
    },
    phones: [
      {
        indicative: "",
        number: "01234567",
        extension: "",
      },
    ],
    contacts: [
      {
        first_name: "David",
        last_name: "Ortiz",
        email: "davidortizcontacto.com@gmail.com",
        phone: {
          indicative: "",
          number: "03003345",
          extension: "",
        },
      },
    ],
    comments: "",
    related_users: {
      seller_id: null,
      collector_id: null,
    },
  };

  before(function () {
    SiigoApi = app._test.initialize(SiigoApi);
    instance = new SiigoApi.CustomerApi();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === "function") return object[getter]();
    else return object[property];
  };

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === "function") object[setter](value);
    else object[property] = value;
  };

  describe("CustomerApi", function () {
    describe("createCustomer", function () {
      it("should call createCustomer successfully", async function () {
        let opts = {
          createCustomerCommand: data,
        };
        try {
          result = await instance.createCustomerWithHttpInfo(opts);
          id = result.response.body.id;
          console.log(result.response.body.id);
        } catch (error) {
          console.error(error);
        }
        expect(result.response.statusCode).to.be(201);
        expect(result.response.body.id).to.be(id);
        expect(result.response.body.type).to.be("Other");
        expect(result.response.body.person_type).to.be("Company");
        expect(result.response.body.id_type.code).to.be("21");
        expect(result.response.body.id_type.name).to.be(
          "Tarjeta de extranjería"
        );
        expect(result.response.body.identification).to.be(identification);
        expect(result.response.body.branch_office).to.be(0);
        expect(result.response.body.check_digit).to.be("0");
        expect(result.response.body.name[0]).to.be("Prueba slasso");
        expect(result.response.body.active).to.be(true);
        expect(result.response.body.vat_responsible).to.be(false);
        expect(result.response.body.fiscal_responsibilities[0].code).to.be(
          "R-99-PN"
        );
        expect(result.response.body.fiscal_responsibilities[0].name).to.be(
          "No aplica ? Otros"
        );
        expect(result.response.body.address.address).to.be("cra 123 n30");
        expect(result.response.body.address.city.country_code).to.be("Co");
        expect(result.response.body.address.city.country_name).to.be(
          "Colombia"
        );
        expect(result.response.body.address.city.state_code).to.be("19");
        expect(result.response.body.address.city.state_name).to.be("Cauca");
        expect(result.response.body.address.city.city_code).to.be("19001");
        expect(result.response.body.address.city.city_name).to.be("Popayán");
        expect(result.response.body.address.postal_code).to.be("");
        expect(result.response.body.phones[0].number).to.be("01234567");
        expect(result.response.body.contacts[0].first_name).to.be("David");
        expect(result.response.body.contacts[0].last_name).to.be("Ortiz");
        expect(result.response.body.contacts[0].email).to.be(
          "davidortizcontacto.com@gmail.com"
        );
      });
    });
    describe("getCustomer", function () {
      it("should call getCustomer successfully", async function () {
        try {
          result = await instance.getCustomerWithHttpInfo(id);
          //console.log(result);
        } catch (error) {
          console.error(error);
        }
        expect(result.response.statusCode).to.be(200);
        expect(result.response.body.id).to.be(id);
        expect(result.response.body.type).to.be("Other");
        expect(result.response.body.person_type).to.be("Company");
        expect(result.response.body.id_type.code).to.be("21");
        expect(result.response.body.id_type.name).to.be(
          "Tarjeta de extranjería"
        );
        expect(result.response.body.identification).to.be(identification);
        expect(result.response.body.branch_office).to.be(0);
        expect(result.response.body.check_digit).to.be("0");
        expect(result.response.body.name[0]).to.be("Prueba slasso");
        expect(result.response.body.active).to.be(true);
        expect(result.response.body.vat_responsible).to.be(false);
        expect(result.response.body.fiscal_responsibilities[0].code).to.be(
          "R-99-PN"
        );
        expect(result.response.body.fiscal_responsibilities[0].name).to.be(
          "No aplica ? Otros"
        );
        expect(result.response.body.address.address).to.be("cra 123 n30");
        expect(result.response.body.address.city.country_code).to.be("Co");
        expect(result.response.body.address.city.country_name).to.be(
          "Colombia"
        );
        expect(result.response.body.address.city.state_code).to.be("19");
        expect(result.response.body.address.city.state_name).to.be("Cauca");
        expect(result.response.body.address.city.city_code).to.be("19001");
        expect(result.response.body.address.city.city_name).to.be("Popayán");
        expect(result.response.body.address.postal_code).to.be("");
        expect(result.response.body.phones[0].number).to.be("01234567");
        expect(result.response.body.contacts[0].first_name).to.be("David");
        expect(result.response.body.contacts[0].last_name).to.be("Ortiz");
        expect(result.response.body.contacts[0].email).to.be(
          "davidortizcontacto.com@gmail.com"
        );
      });
    });
    describe("getCustomers", function () {
      it("should call getCustomers successfully", async function () {
        try {
          result = await instance.getCustomersWithHttpInfo({});
        } catch (error) {
          console.error(error);
        }
        expect(result.response.statusCode).to.be(200);
        expect(result.response.body.results[0].id).to.be(id);
        expect(result.response.body.results[0].type).to.be("Other");
        expect(result.response.body.results[0].person_type).to.be("Company");
        expect(result.response.body.results[0].id_type.code).to.be("21");
        expect(result.response.body.results[0].id_type.name).to.be(
          "Tarjeta de extranjería"
        );
        expect(result.response.body.results[0].identification).to.be(
          identification
        );
        expect(result.response.body.results[0].branch_office).to.be(0);
        expect(result.response.body.results[0].check_digit).to.be("0");
        expect(result.response.body.results[0].name[0]).to.be("Prueba slasso");
        expect(result.response.body.results[0].active).to.be(true);
        expect(result.response.body.results[0].vat_responsible).to.be(false);
        expect(
          result.response.body.results[0].fiscal_responsibilities[0].code
        ).to.be("R-99-PN");
        expect(
          result.response.body.results[0].fiscal_responsibilities[0].name
        ).to.be("No aplica ? Otros");
        expect(result.response.body.results[0].address.address).to.be(
          "cra 123 n30"
        );
        expect(result.response.body.results[0].address.city.country_code).to.be(
          "Co"
        );
        expect(result.response.body.results[0].address.city.country_name).to.be(
          "Colombia"
        );
        expect(result.response.body.results[0].address.city.state_code).to.be(
          "19"
        );
        expect(result.response.body.results[0].address.city.state_name).to.be(
          "Cauca"
        );
        expect(result.response.body.results[0].address.city.city_code).to.be(
          "19001"
        );
        expect(result.response.body.results[0].address.city.city_name).to.be(
          "Popayán"
        );
        expect(result.response.body.results[0].address.postal_code).to.be("");
        expect(result.response.body.results[0].phones[0].number).to.be(
          "01234567"
        );
        expect(result.response.body.results[0].contacts[0].first_name).to.be(
          "David"
        );
        expect(result.response.body.results[0].contacts[0].last_name).to.be(
          "Ortiz"
        );
        expect(result.response.body.results[0].contacts[0].email).to.be(
          "davidortizcontacto.com@gmail.com"
        );
      });
    });
    describe("updateCustomer", function () {
      it("should call updateCustomer successfully", async function () {
        let newCode = Date.now().toString();
        try {
          data.identification = newCode;
          let opts = {
            createCustomerCommand: data,
          };
          result = await instance.updateCustomerWithHttpInfo(id, opts);
        } catch (error) {
          console.error(error);
        }
        expect(result.response.statusCode).to.be(200);
        expect(result.response.body.id).to.be(id);
        expect(result.response.body.type).to.be("Other");
        expect(result.response.body.person_type).to.be("Company");
        expect(result.response.body.id_type.code).to.be("21");
        expect(result.response.body.id_type.name).to.be(
          "Tarjeta de extranjería"
        );
        expect(result.response.body.identification).to.be(newCode);
        expect(result.response.body.branch_office).to.be(0);
        expect(result.response.body.check_digit).to.be("0");
        expect(result.response.body.name[0]).to.be("Prueba slasso");
        expect(result.response.body.active).to.be(true);
        expect(result.response.body.vat_responsible).to.be(false);
        expect(result.response.body.fiscal_responsibilities[0].code).to.be(
          "R-99-PN"
        );
        expect(result.response.body.fiscal_responsibilities[0].name).to.be(
          "No aplica ? Otros"
        );
        expect(result.response.body.address.address).to.be("cra 123 n30");
        expect(result.response.body.address.city.country_code).to.be("Co");
        expect(result.response.body.address.city.country_name).to.be(
          "Colombia"
        );
        expect(result.response.body.address.city.state_code).to.be("19");
        expect(result.response.body.address.city.state_name).to.be("Cauca");
        expect(result.response.body.address.city.city_code).to.be("19001");
        expect(result.response.body.address.city.city_name).to.be("Popayán");
        expect(result.response.body.address.postal_code).to.be("");
        expect(result.response.body.phones[0].number).to.be("01234567");
        expect(result.response.body.contacts[0].first_name).to.be("David");
        expect(result.response.body.contacts[0].last_name).to.be("Ortiz");
        expect(result.response.body.contacts[0].email).to.be(
          "davidortizcontacto.com@gmail.com"
        );
      });
    });
    describe("deleteCustomer", function () {
      it("should call deleteCustomer successfully", async function () {
        try {
          result = await instance.deleteCustomerWithHttpInfo(id);
        } catch (error) {
          console.error(error);
        }
        expect(result.response.statusCode).to.be(200);
        expect(result.data.id).to.be(id); 
        expect(result.data.deleted).to.be(true);
      });
    });
  });
});
