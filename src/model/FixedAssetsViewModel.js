/**
 * Siigo API
 * Siigo Api v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FixedAssetsViewModel model module.
 * @module model/FixedAssetsViewModel
 * @version v1
 */
class FixedAssetsViewModel {
    /**
     * Constructs a new <code>FixedAssetsViewModel</code>.
     * @alias module:model/FixedAssetsViewModel
     */
    constructor() { 
        
        FixedAssetsViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FixedAssetsViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FixedAssetsViewModel} obj Optional instance to populate.
     * @return {module:model/FixedAssetsViewModel} The populated <code>FixedAssetsViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FixedAssetsViewModel();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Represents the id of the fixed asset, the value of this field must be an integer  number that represents the unique id of the cost center.
 * @member {Number} id
 */
FixedAssetsViewModel.prototype['id'] = undefined;

/**
 * Represents the name of the fixed asset. This value can be an alphanumeric  name like 'Personal computer' or 'Furniture'.
 * @member {String} name
 */
FixedAssetsViewModel.prototype['name'] = undefined;

/**
 * Represents the Name of the fixed assets group.
 * @member {String} group
 */
FixedAssetsViewModel.prototype['group'] = undefined;

/**
 * Indicates if the fixed assets group is in use.  the value of this status will be true or false.  By default, this field will be active (true).
 * @member {Boolean} active
 */
FixedAssetsViewModel.prototype['active'] = undefined;






export default FixedAssetsViewModel;

