/**
 * Siigo.Alliances API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TermsViewModel from './TermsViewModel';

/**
 * The TermsInfoViewModel model module.
 * @module model/TermsInfoViewModel
 * @version V1
 */
class TermsInfoViewModel {
    /**
     * Constructs a new <code>TermsInfoViewModel</code>.
     * @alias module:model/TermsInfoViewModel
     */
    constructor() { 
        
        TermsInfoViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TermsInfoViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TermsInfoViewModel} obj Optional instance to populate.
     * @return {module:model/TermsInfoViewModel} The populated <code>TermsInfoViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TermsInfoViewModel();

            if (data.hasOwnProperty('accepted')) {
                obj['accepted'] = TermsViewModel.constructFromObject(data['accepted']);
            }
            if (data.hasOwnProperty('current')) {
                obj['current'] = TermsViewModel.constructFromObject(data['current']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/TermsViewModel} accepted
 */
TermsInfoViewModel.prototype['accepted'] = undefined;

/**
 * @member {module:model/TermsViewModel} current
 */
TermsInfoViewModel.prototype['current'] = undefined;






export default TermsInfoViewModel;

