/**
 * Siigo.Alliances API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FinancialInformationModelStructure model module.
 * @module model/FinancialInformationModelStructure
 * @version V1
 */
class FinancialInformationModelStructure {
    /**
     * Constructs a new <code>FinancialInformationModelStructure</code>.
     * @alias module:model/FinancialInformationModelStructure
     */
    constructor() { 
        
        FinancialInformationModelStructure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FinancialInformationModelStructure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FinancialInformationModelStructure} obj Optional instance to populate.
     * @return {module:model/FinancialInformationModelStructure} The populated <code>FinancialInformationModelStructure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FinancialInformationModelStructure();

            if (data.hasOwnProperty('net_revenue')) {
                obj['net_revenue'] = ApiClient.convertToType(data['net_revenue'], 'Number');
            }
            if (data.hasOwnProperty('gross_profit')) {
                obj['gross_profit'] = ApiClient.convertToType(data['gross_profit'], 'Number');
            }
            if (data.hasOwnProperty('operating_income')) {
                obj['operating_income'] = ApiClient.convertToType(data['operating_income'], 'Number');
            }
            if (data.hasOwnProperty('current_ratio')) {
                obj['current_ratio'] = ApiClient.convertToType(data['current_ratio'], 'Number');
            }
            if (data.hasOwnProperty('acid_test_ratio')) {
                obj['acid_test_ratio'] = ApiClient.convertToType(data['acid_test_ratio'], 'Number');
            }
            if (data.hasOwnProperty('supplier_days')) {
                obj['supplier_days'] = ApiClient.convertToType(data['supplier_days'], 'Number');
            }
            if (data.hasOwnProperty('stock_days')) {
                obj['stock_days'] = ApiClient.convertToType(data['stock_days'], 'Number');
            }
            if (data.hasOwnProperty('accounts_receivable_days')) {
                obj['accounts_receivable_days'] = ApiClient.convertToType(data['accounts_receivable_days'], 'Number');
            }
            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], {'String': Object});
            }
            if (data.hasOwnProperty('liabilities')) {
                obj['liabilities'] = ApiClient.convertToType(data['liabilities'], {'String': Object});
            }
            if (data.hasOwnProperty('equity')) {
                obj['equity'] = ApiClient.convertToType(data['equity'], {'String': Object});
            }
            if (data.hasOwnProperty('revenues')) {
                obj['revenues'] = ApiClient.convertToType(data['revenues'], {'String': Object});
            }
            if (data.hasOwnProperty('expenses')) {
                obj['expenses'] = ApiClient.convertToType(data['expenses'], {'String': Object});
            }
            if (data.hasOwnProperty('costs')) {
                obj['costs'] = ApiClient.convertToType(data['costs'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * @member {Number} net_revenue
 */
FinancialInformationModelStructure.prototype['net_revenue'] = undefined;

/**
 * @member {Number} gross_profit
 */
FinancialInformationModelStructure.prototype['gross_profit'] = undefined;

/**
 * @member {Number} operating_income
 */
FinancialInformationModelStructure.prototype['operating_income'] = undefined;

/**
 * @member {Number} current_ratio
 */
FinancialInformationModelStructure.prototype['current_ratio'] = undefined;

/**
 * @member {Number} acid_test_ratio
 */
FinancialInformationModelStructure.prototype['acid_test_ratio'] = undefined;

/**
 * @member {Number} supplier_days
 */
FinancialInformationModelStructure.prototype['supplier_days'] = undefined;

/**
 * @member {Number} stock_days
 */
FinancialInformationModelStructure.prototype['stock_days'] = undefined;

/**
 * @member {Number} accounts_receivable_days
 */
FinancialInformationModelStructure.prototype['accounts_receivable_days'] = undefined;

/**
 * @member {Object.<String, Object>} assets
 */
FinancialInformationModelStructure.prototype['assets'] = undefined;

/**
 * @member {Object.<String, Object>} liabilities
 */
FinancialInformationModelStructure.prototype['liabilities'] = undefined;

/**
 * @member {Object.<String, Object>} equity
 */
FinancialInformationModelStructure.prototype['equity'] = undefined;

/**
 * @member {Object.<String, Object>} revenues
 */
FinancialInformationModelStructure.prototype['revenues'] = undefined;

/**
 * @member {Object.<String, Object>} expenses
 */
FinancialInformationModelStructure.prototype['expenses'] = undefined;

/**
 * @member {Object.<String, Object>} costs
 */
FinancialInformationModelStructure.prototype['costs'] = undefined;






export default FinancialInformationModelStructure;

