/**
 * Siigo API
 * Siigo Api v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CurrencyModel from './CurrencyModel';
import DocumentModel from './DocumentModel';
import InvoiceCustomerModel from './InvoiceCustomerModel';
import InvoiceModel from './InvoiceModel';
import ItemsModel from './ItemsModel';
import Metadata from './Metadata';
import PaymentsModel from './PaymentsModel';
import RetentionsOutModel from './RetentionsOutModel';
import StampViewModel from './StampViewModel';

/**
 * The CreditNoteViewModel model module.
 * @module model/CreditNoteViewModel
 * @version 0.1.0
 */
class CreditNoteViewModel {
    /**
     * Constructs a new <code>CreditNoteViewModel</code>.
     * Viewmodel Specifically made for the clients, based on the data returned by the queries.
     * @alias module:model/CreditNoteViewModel
     */
    constructor() { 
        
        CreditNoteViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditNoteViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditNoteViewModel} obj Optional instance to populate.
     * @return {module:model/CreditNoteViewModel} The populated <code>CreditNoteViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditNoteViewModel();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('document')) {
                obj['document'] = DocumentModel.constructFromObject(data['document']);
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('invoice')) {
                obj['invoice'] = InvoiceModel.constructFromObject(data['invoice']);
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = InvoiceCustomerModel.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('cost_center')) {
                obj['cost_center'] = ApiClient.convertToType(data['cost_center'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = CurrencyModel.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = ApiClient.convertToType(data['seller'], 'Number');
            }
            if (data.hasOwnProperty('retentions')) {
                obj['retentions'] = ApiClient.convertToType(data['retentions'], [RetentionsOutModel]);
            }
            if (data.hasOwnProperty('advance_payment')) {
                obj['advance_payment'] = ApiClient.convertToType(data['advance_payment'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('observations')) {
                obj['observations'] = ApiClient.convertToType(data['observations'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [ItemsModel]);
            }
            if (data.hasOwnProperty('payments')) {
                obj['payments'] = ApiClient.convertToType(data['payments'], [PaymentsModel]);
            }
            if (data.hasOwnProperty('stamp')) {
                obj['stamp'] = StampViewModel.constructFromObject(data['stamp']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = Metadata.constructFromObject(data['metadata']);
            }
        }
        return obj;
    }


}

/**
 * Represents the unique Id of credit note, this value must be a \"Guid\"  with the next format 00000000-0000-0000-0000-000000000000
 * @member {String} id
 */
CreditNoteViewModel.prototype['id'] = undefined;

/**
 * @member {module:model/DocumentModel} document
 */
CreditNoteViewModel.prototype['document'] = undefined;

/**
 * Represents the sequential number of the document,   this number is required depending of document type
 * @member {Number} number
 */
CreditNoteViewModel.prototype['number'] = undefined;

/**
 * Contains information about document type,   document type Id and the sequential number of the document
 * @member {String} name
 */
CreditNoteViewModel.prototype['name'] = undefined;

/**
 * Represents the date of document. This format must be yyyy-MM-dd
 * @member {String} date
 */
CreditNoteViewModel.prototype['date'] = undefined;

/**
 * @member {module:model/InvoiceModel} invoice
 */
CreditNoteViewModel.prototype['invoice'] = undefined;

/**
 * @member {module:model/InvoiceCustomerModel} customer
 */
CreditNoteViewModel.prototype['customer'] = undefined;

/**
 * Represents the number of the cost center
 * @member {Number} cost_center
 */
CreditNoteViewModel.prototype['cost_center'] = undefined;

/**
 * @member {module:model/CurrencyModel} currency
 */
CreditNoteViewModel.prototype['currency'] = undefined;

/**
 * Represents the Id of seller associated to invoice
 * @member {Number} seller
 */
CreditNoteViewModel.prototype['seller'] = undefined;

/**
 * Contains a list information about every Retention associated to invoice
 * @member {Array.<module:model/RetentionsOutModel>} retentions
 */
CreditNoteViewModel.prototype['retentions'] = undefined;

/**
 * Represent the Advance Payment
 * @member {Number} advance_payment
 */
CreditNoteViewModel.prototype['advance_payment'] = undefined;

/**
 * Represent the total value of document
 * @member {Number} total
 */
CreditNoteViewModel.prototype['total'] = undefined;

/**
 * Represent additional comments in document
 * @member {String} observations
 */
CreditNoteViewModel.prototype['observations'] = undefined;

/**
 * Contains a list with items associated to invoice
 * @member {Array.<module:model/ItemsModel>} items
 */
CreditNoteViewModel.prototype['items'] = undefined;

/**
 * Contains a list with payments types associated to invoice
 * @member {Array.<module:model/PaymentsModel>} payments
 */
CreditNoteViewModel.prototype['payments'] = undefined;

/**
 * @member {module:model/StampViewModel} stamp
 */
CreditNoteViewModel.prototype['stamp'] = undefined;

/**
 * @member {module:model/Metadata} metadata
 */
CreditNoteViewModel.prototype['metadata'] = undefined;






export default CreditNoteViewModel;

